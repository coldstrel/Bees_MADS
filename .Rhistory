top_10_lost <- colonies_max |>
arrange(desc(colony_lost_t)) |>
head(10)
top_10_lost |>
ggplot(aes(y=colony_lost_t ,x=state))+
geom_point() +
geom_col(alpha = 0.7, fullrange = TRUE ) +
labs(x = 'Colonies lost', y = 'Colonies renovated', color = 'Months') +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 90)) +
scale_y_continuous(labels = scales::label_number(suffix=" K", scale = 1e-3))
top_10_lost |>
ggplot(aes(y=colony_lost_t ,x=state))+
geom_point() +
geom_col(alpha = 0.7, fullrange = TRUE ) +
labs(x = 'Colonies lost', y = 'Colonies renovated', color = 'Months') +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 90)) +
scale_y_continuous(labels = scales::label_number(suffix=" M", scale = 1e-6))
top_10_lost |>
ggplot(aes(y=colony_lost_t ,x=state))+
geom_col(alpha = 0.7, fullrange = TRUE ) +
labs(x = 'Colonies lost', y = 'Colonies renovated', color = 'Months') +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 90)) +
scale_y_continuous(labels = scales::label_number(suffix=" M", scale = 1e-6))
top_10_lost
top_10_lost |>
ggplot(aes(y=colony_lost_t ,x=state))+
geom_col(alpha = 0.7, fullrange = TRUE ) +
labs(x = 'Colonies lost', y = 'N. Colonies', color = 'state') +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 90)) +
scale_y_continuous(labels = scales::label_number(suffix=" M", scale = 1e-6))
top_10_lost |>
ggplot(aes(y=colony_lost_t ,x=state))+
geom_col(alpha = 0.7, fullrange = TRUE ) +
labs(y = 'N. Colonies') +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 90)) +
scale_y_continuous(labels = scales::label_number(suffix=" M", scale = 1e-6))
top_10_lost |>
ggplot(aes(y=colony_lost_t ,x=state))+
geom_col(alpha = 0.7, fullrange = TRUE ) +
labs(y = 'N. Colonies', x='') +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 90)) +
scale_y_continuous(labels = scales::label_number(suffix=" M", scale = 1e-6))
top_10_lost |>
ggplot(aes(y=colony_lost_t ,x=state))+
geom_col(alpha = 0.7, fullrange = TRUE, aes(fill = sum_lost) ) +
labs(y = 'N. Colonies', x='') +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 90)) +
scale_y_continuous(labels = scales::label_number(suffix=" M", scale = 1e-6))
top_10_lost |>
ggplot(aes(y=colony_lost_t ,x=state))+
geom_col(alpha = 0.7, fullrange = TRUE, aes(fill = state) ) +
labs(y = 'N. Colonies', x='') +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 90)) +
scale_y_continuous(labels = scales::label_number(suffix=" M", scale = 1e-6))
top_10_lost |>
ggplot(aes(y=colony_lost_t ,x=fct_rev(fct_reorder(state,colony_lost_t))))+
geom_col(alpha = 0.7, fullrange = TRUE, aes(fill = state) ) +
labs(y = 'N. Colonies', x='') +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 90)) +
scale_y_continuous(labels = scales::label_number(suffix=" M", scale = 1e-6))
clean_data <- na.omit(colony)
top_10_lost <- colonies_max |>
arrange(desc(colony_lost_t)) |>
head(10)
top_10_lost |>
ggplot(aes(y=colony_lost_t ,x=fct_rev(fct_reorder(state,colony_lost_t))))+
geom_col(alpha = 0.7, fullrange = TRUE, aes(fill = state) ) +
labs(y = 'N. Colonies', x='') +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 90)) +
scale_y_continuous(labels = scales::label_number(suffix=" M", scale = 1e-6))
top_10_lost |>
ggplot(aes(y=colony_lost_t ,x=fct_rev(fct_reorder(state,colony_lost_t))))+
geom_col(alpha = 0.7, fullrange = TRUE, aes(fill = state) ) +
labs(y = 'N. Colonies', x='') +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 45)) +
scale_y_continuous(labels = scales::label_number(suffix=" M", scale = 1e-6))
top_10_lost |>
ggplot(aes(y=colony_lost_t ,x=fct_rev(fct_reorder(state,colony_lost_t))))+
geom_col(alpha = 0.7, fullrange = TRUE, aes(fill = state) ) +
labs(y = 'N. Colonies', x='') +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 45,vjust = 0.5)) +
scale_y_continuous(labels = scales::label_number(suffix=" M", scale = 1e-6))
clean_data <- na.omit(colony)
top_10_lost <- colonies_max |>
arrange(desc(colony_lost_t)) |>
head(10)
top_10_lost |>
ggplot(aes(y=colony_lost_t ,x=fct_rev(fct_reorder(state,colony_lost_t))))+
geom_col(alpha = 0.7, fullrange = TRUE, aes(fill = state) ) +
labs(y = 'N. Colonies', x='') +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 45,vjust = 0.5)) +
scale_y_continuous(labels = scales::label_number(suffix=" M", scale = 1e-6))
library(ggplot2)
library(ggpubr)
library(tidyverse)
library(forcats)
library(rnaturalearth)
library(rnaturalearthdata)
library(ggrepel)
library(sf)
library(maps)
library(mapdata)
library(usmap)
library(mapview)
#Loading the data
colony <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-11/colony.csv')
## Get the colonies totals for lost, added and final
# Not incluiding Hawaii
colonies_max <- colony |>
filter(state != "Hawaii") |>
select(state,colony_n, colony_lost, colony_added) |>
group_by(state) |>
summarise(colony_total = sum(colony_n,na.rm = TRUE),
colony_lost_t = sum(colony_lost, na.rm = TRUE),
colony_added_t = sum(colony_added, na.rm = TRUE)) |>
inner_join(usa, join_by(state == state))
## Get the colonies totals for lost, added and final
# Not incluiding Hawaii
colonies_max <- colony |>
filter(state != "Hawaii") |>
select(state,colony_n, colony_lost, colony_added) |>
group_by(state) |>
summarise(colony_total = sum(colony_n,na.rm = TRUE),
colony_lost_t = sum(colony_lost, na.rm = TRUE),
colony_added_t = sum(colony_added, na.rm = TRUE)) |>
inner_join(usa, join_by(state == state))
#Loading the data
colony <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-11/colony.csv')
origins_lost <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-11/stressor.csv')
usa <- readr::read_csv('data/states.csv')
## Get the colonies totals for lost, added and final
# Not incluiding Hawaii
colonies_max <- colony |>
filter(state != "Hawaii") |>
select(state,colony_n, colony_lost, colony_added) |>
group_by(state) |>
summarise(colony_total = sum(colony_n,na.rm = TRUE),
colony_lost_t = sum(colony_lost, na.rm = TRUE),
colony_added_t = sum(colony_added, na.rm = TRUE)) |>
inner_join(usa, join_by(state == state))
## Getting the percentage for the colonies
colonies_percent <- colony |>
select(state, colony_n, colony_lost_pct, colony_reno_pct) |>
group_by(state) |>
summarise(
colony_total = round(mean(colony_n, na.rm = TRUE)),
lost_pct = round(mean(colony_lost_pct, na.rm = TRUE)),
added_pct = round(mean(colony_reno_pct, na.rm = TRUE))) |>
inner_join(usa, join_by(state == state))
world <- ne_countries(scale = "medium", returnclass = "sf")
states <- st_as_sf(map("state", plot = FALSE, fill = TRUE))
#Get the data from datasets to plot USA maps
world <- ne_countries(scale = "medium", returnclass = "sf")
states <- st_as_sf(map("state", plot = FALSE, fill = TRUE))
# Use the unicode for the bees, also using a geom_point for the bees
states|>
ggplot() +
geom_sf() +
geom_point(data = colonies_max, aes(x = longitude, y = latitude, size = colony_total),shape = "\U1F41D") +
geom_text_repel(data = colonies_max, aes(longitude, latitude,label =  code)) +
scale_size_continuous(labels = scales::label_number_si(scale = 1e-6, suffix = " M")) +
labs(size = "Colonies", x='',y='')
top_10_colonies <- colonies_max |>
arrange(desc(colony_total)) |>
head(10)
# Get the top 10 states with more bees, and change the scales for Millions
ggplot() +
geom_sf(data = states) +
geom_point(data = top_10_colonies, aes(x = longitude, y = latitude, size = colony_total),shape = "\U1F41D") +
coord_sf(xlim = c(-130, -60), ylim = c(20, 60), expand = FALSE) +
geom_text_repel(data = top_10_colonies, aes(longitude, latitude,label = state), nudge_x = c(3, 2, 2, 2, -1), nudge_y = c(0.25,-0.25, 0.5, 0.5, -0.5)) +scale_size_continuous(labels = scales::label_number_si(scale = 1e-6, suffix = " M"))+
labs(size = "Colonies",x='',y='')
top_10_less <- colonies_max |>
arrange(colony_lost_t) |>
head(10)
## Show the 10 states with less bees
ggplot() +
geom_sf(data = states) +
geom_point(data = top_10_less, aes(x = longitude, y = latitude, size = colony_lost_t),shape = "\U1F41D") +
coord_sf(xlim = c(-130, -60), ylim = c(20, 60), expand = FALSE) +
geom_text_repel(data = top_10_less, aes(longitude, latitude,label = state)) +
scale_size_continuous(labels = scales::label_number_si(scale=1e-3,suffix = 'K')) +
labs(size = "Colonies",x='',y='')
## Plot in which year there were lees
colony |>
filter(year != 2021) |>
filter(state == "United States") |>
group_by(year) |>
summarise(colony_max_n = sum(colony_n-colony_lost,na.rm=TRUE))|>
ggplot(aes(x=year, y=colony_max_n)) +
geom_line(color="red") +
labs(x = '',y='Bees count') +
scale_y_continuous(labels = scales::label_number(suffix=" M", scale = 1e-6))
origins_lost$stressor <- factor(origins_lost$stressor)
sum_stressors <- origins_lost |>
group_by(stressor) |>
summarise( pct_stressor = mean(stress_pct, na.rm = TRUE)) |>
group_by(stressor = ifelse(stressor %in% c("Other", "Unknown"), "Other", as.character(stressor))) %>%
summarize(pct_stressor = sum(pct_stressor))
sum_stressors %>%
ggplot(aes(x = fct_rev(fct_reorder(stressor, pct_stressor)), y = pct_stressor)) +
geom_col(aes(fill = pct_stressor)) +
labs( y="", x ="" , caption = "Mean of causes of death") +
theme(legend.position = "none")
colony$months <-factor(colony$months)
colony |>
filter(state != "United States") |>
filter(year != 2021)|>
group_by(year, months) |>
summarise(sum_lost = sum(colony_lost, na.rm = TRUE))|>
ggplot(aes(x = fct_rev(fct_reorder(months,sum_lost)) ,y=sum_lost)) + ## I didnt find a solution here to get it in an order way
facet_wrap(~year)+
geom_col(aes(fill = sum_lost)) +
theme(legend.position = "none")+
labs(x ="", y="") +
theme(axis.text.x = element_text(angle = 90)) +
scale_y_continuous(labels = scales::label_number(suffix=" K", scale = 1e-3))
clean_data <- na.omit(colony)
top_10_lost <- colonies_max |>
arrange(desc(colony_lost_t)) |>
head(10)
top_10_lost |>
ggplot(aes(y=colony_lost_t ,x=fct_rev(fct_reorder(state,colony_lost_t))))+
geom_col(alpha = 0.7, fullrange = TRUE, aes(fill = state) ) +
labs(y = 'N. Colonies', x='') +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 45,vjust = 0.5)) +
scale_y_continuous(labels = scales::label_number(suffix=" M", scale = 1e-6))
## Plot in which year there were lees
colony |>
filter(year != 2021) |>
filter(state == "United States") |>
group_by(year) |>
summarise(colony_max_n = sum(colony_n-colony_lost,na.rm=TRUE))|>
ggplot(aes(x=year, y=colony_max_n)) +
geom_line(color="red") +
geom_point(shape = "\U1F41D") +
labs(x = '',y='Bees count') +
scale_y_continuous(labels = scales::label_number(suffix=" M", scale = 1e-6))
## Plot in which year there were lees
colony |>
filter(year != 2021) |>
filter(state == "United States") |>
group_by(year) |>
summarise(colony_max_n = sum(colony_n-colony_lost,na.rm=TRUE))|>
ggplot(aes(x=year, y=colony_max_n)) +
geom_line(color="red") +
geom_point(shape = "\U1F41D", size = 10) +
labs(x = '',y='Bees count') +
scale_y_continuous(labels = scales::label_number(suffix=" M", scale = 1e-6))
## Plot in which year there were lees
colony |>
filter(year != 2021) |>
filter(state == "United States") |>
group_by(year) |>
summarise(colony_max_n = sum(colony_n-colony_lost,na.rm=TRUE))|>
ggplot(aes(x=year, y=colony_max_n)) +
geom_line(color="red") +
labs(x = '',y='Bees count') +
scale_y_continuous(labels = scales::label_number(suffix=" M", scale = 1e-6))
renv::status()
renv::snapshot()
vec <- 1:4 - 1:4
vec
c(vec = 1:4)
1:4 -> vec
vec
1:4 <- vec
1:40 -> vec
vec
c(vec = 1:10)
penguins
str_detect(c(""), "*")
library(stringr)
str_detect(c(""), "*")
str_detect(c("abc"), "*")
str_detect(c("*ab*c"), "*")
my_words <- c("dowager","wonder","down","dew" ,"window" ,"wardrobe","weed","wednesday")
str_count(my_words, re)
my_words <- c("dowager","wonder","down","dew" ,"window" ,"wardrobe","weed","wednesday")
re = "\\w+"
str_count(my_words, re)
re="\\W"
str_count(my_words, re)
re="\d+"
re="\\D+"
str_count(my_words, re)
re="\d"
re="\\w"
str_count(my_words, re)
a <- "ajjsjsjsjbjjjjj"
str_detect(a,a./b)
str_detect(a,a.?b)
str_detect(a,"a.?b")
str_detect(a,"a.*?b")
str_detect(a,"a.+b")
str_view(a,"a.*?b")
qt(0.975, df = 9)
pattern = re.compile(r'a.*?b')
pattern.search()
patern <- 'akkkklkkkkbllllllllllalllllllblllllllblllallllb'
str_extract(pattern = patern, "a.*?b")
str_extract(pattern = patern, "a.?b")
str_extract(patern, "a.?b")
str_extract(patern, "a.+b")
str_extract(patern, "a.b")
str_extract(patern, "a.*b")
str_extract(patern, "a.?b")
swiss
ggplot(swiss) +
geom_point(aes(x = Education, y = Agriculture)) +
geom_smooth(method='lm')
library(ggplot2)
ggplot(swiss) +
geom_point(aes(x = Education, y = Agriculture)) +
geom_smooth(method='lm')
ggplot(swiss) +
geom_point(aes(x = Education, y = Agriculture)) +
geom_smooth(x~y)
ggplot(swiss) +
geom_point(aes(x = Education, y = Agriculture)) +
geom_smooth(method="lm")
ggplot(swiss,aes(x = Education, y = Agriculture)) +
geom_point() +
geom_smooth(formula="lm")
ggplot(france,
aes(x = Liberte,
y = Egalite)) +
geom_point(color = "blue")
france
swiss
ggplot(swiss,
aes(x = Fertility,
y = Agriculture)) +
geom_point(color = "blue")
ggplot(swiss,
aes(x = Fertility,
y = Agriculture,color = "blue")) +
geom_point()
library(ggplot2)
library(ggpubr)
library(tidyverse)
library(forcats)
library("rnaturalearth")
library("rnaturalearthdata")
library("ggrepel")
library(sf)
library(mapview)
colony |>
filter(state == "United States")
colony <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-11/colony.csv')
colony |>
filter(state == "United States")
colony |>
filter(year == 2019)
colony |>
filter(year == 2020) |>
select(year, colony_max)
colony |>
filter(year != 2021) |>
group_by(year) |>
summarise(colony_max_n = sum(colony_max,na.rm=TRUE)/1000000) |>
ggplot(aes(x=year, y=colony_max_n)) +
geom_line(color="blue") +
geom_point(color = "red") +
labs(title = "Max number of bees  colonies by year", subtitle = "2015 - 2020", x = '',y='Bees count', caption = 'By millions') + ylim(c(10,18))
colony |>
filter(year == 2020) |>
select(year, colony_max)
colony |>
filter(year == 2019) |>
select(year, colony_max)
library(ggplot2)
library(ggpubr)
library(tidyverse)
library(forcats)
library(rnaturalearth)
library(rnaturalearthdata)
library(ggrepel)
library(sf)
library(maps)
library(mapdata)
library(usmap)
library(mapview)
#Loading the data
colony <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-11/colony.csv')
origins_lost <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-11/stressor.csv')
usa <- readr::read_csv('data/states.csv')
## Get the colonies totals for lost, added and final
# Not incluiding Hawaii
colonies_max <- colony |>
filter(state != "Hawaii") |>
select(state,colony_n, colony_lost, colony_added) |>
group_by(state) |>
summarise(colony_total = sum(colony_n,na.rm = TRUE),
colony_lost_t = sum(colony_lost, na.rm = TRUE),
colony_added_t = sum(colony_added, na.rm = TRUE)) |>
inner_join(usa, join_by(state == state))
## Getting the percentage for the colonies
colonies_percent <- colony |>
select(state, colony_n, colony_lost_pct, colony_reno_pct) |>
group_by(state) |>
summarise(
colony_total = round(mean(colony_n, na.rm = TRUE)),
lost_pct = round(mean(colony_lost_pct, na.rm = TRUE)),
added_pct = round(mean(colony_reno_pct, na.rm = TRUE))) |>
inner_join(usa, join_by(state == state))
world <- ne_countries(scale = "medium", returnclass = "sf")
states <- st_as_sf(map("state", plot = FALSE, fill = TRUE))
#Get the data from datasets to plot USA maps
world <- ne_countries(scale = "medium", returnclass = "sf")
states <- st_as_sf(map("state", plot = FALSE, fill = TRUE))
# Use the unicode for the bees, also using a geom_point for the bees
states|>
ggplot() +
geom_sf() +
geom_point(data = colonies_max, aes(x = longitude, y = latitude, size = colony_total),shape = "\U1F41D") +
geom_text_repel(data = colonies_max, aes(longitude, latitude,label =  code)) +
scale_size_continuous(labels = scales::label_number_si(scale = 1e-6, suffix = " M")) +
labs(size = "Colonies", x='',y='')
top_10_colonies <- colonies_max |>
arrange(desc(colony_total)) |>
head(10)
# Get the top 10 states with more bees, and change the scales for Millions
ggplot() +
geom_sf(data = states) +
geom_point(data = top_10_colonies, aes(x = longitude, y = latitude, size = colony_total),shape = "\U1F41D") +
coord_sf(xlim = c(-130, -60), ylim = c(20, 60), expand = FALSE) +
geom_text_repel(data = top_10_colonies, aes(longitude, latitude,label = state), nudge_x = c(3, 2, 2, 2, -1), nudge_y = c(0.25,-0.25, 0.5, 0.5, -0.5)) +scale_size_continuous(labels = scales::label_number_si(scale = 1e-6, suffix = " M"))+
labs(size = "Colonies",x='',y='')
top_10_less <- colonies_max |>
arrange(colony_lost_t) |>
head(10)
## Show the 10 states with less bees
ggplot() +
geom_sf(data = states) +
geom_point(data = top_10_less, aes(x = longitude, y = latitude, size = colony_lost_t),shape = "\U1F41D") +
coord_sf(xlim = c(-130, -60), ylim = c(20, 60), expand = FALSE) +
geom_text_repel(data = top_10_less, aes(longitude, latitude,label = state)) +
scale_size_continuous(labels = scales::label_number_si(scale=1e-3,suffix = 'K')) +
labs(size = "Colonies",x='',y='')
## Plot in which year there were lees
colony |>
filter(year != 2021) |>
filter(state == "United States") |>
group_by(year) |>
summarise(colony_max_n = sum(colony_n-colony_lost,na.rm=TRUE))|>
ggplot(aes(x=year, y=colony_max_n)) +
geom_line(color="red") +
labs(x = '',y='Bees count') +
scale_y_continuous(labels = scales::label_number(suffix=" M", scale = 1e-6))
origins_lost$stressor <- factor(origins_lost$stressor)
sum_stressors <- origins_lost |>
group_by(stressor) |>
summarise( pct_stressor = mean(stress_pct, na.rm = TRUE)) |>
group_by(stressor = ifelse(stressor %in% c("Other", "Unknown"), "Other", as.character(stressor))) %>%
summarize(pct_stressor = sum(pct_stressor))
sum_stressors %>%
ggplot(aes(x = fct_rev(fct_reorder(stressor, pct_stressor)), y = pct_stressor)) +
geom_col(aes(fill = pct_stressor)) +
labs( y="", x ="" , caption = "Mean of causes of death") +
theme(legend.position = "none")
colony$months <-factor(colony$months)
colony |>
filter(state != "United States") |>
filter(year != 2021)|>
group_by(year, months) |>
summarise(sum_lost = sum(colony_lost, na.rm = TRUE))|>
ggplot(aes(x = fct_rev(fct_reorder(months,sum_lost)) ,y=sum_lost)) + ## I didnt find a solution here to get it in an order way
facet_wrap(~year)+
geom_col(aes(fill = sum_lost)) +
theme(legend.position = "none")+
labs(x ="", y="") +
theme(axis.text.x = element_text(angle = 90)) +
scale_y_continuous(labels = scales::label_number(suffix=" K", scale = 1e-3))
clean_data <- na.omit(colony)
top_10_lost <- colonies_max |>
arrange(desc(colony_lost_t)) |>
head(10)
top_10_lost |>
ggplot(aes(y=colony_lost_t ,x=fct_rev(fct_reorder(state,colony_lost_t))))+
geom_col(alpha = 0.7, fullrange = TRUE, aes(fill = state) ) +
labs(y = 'N. Colonies', x='') +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 45,vjust = 0.5)) +
scale_y_continuous(labels = scales::label_number(suffix=" M", scale = 1e-6))
colonies_percent
colonies_max
clean_data <- na.omit(colony)
top_10_lost <- colonies_max |>
arrange(desc(colony_lost_t)) |>
head(10)
top_10_lost |>
ggplot(aes(y=colony_lost_t ,x=fct_rev(fct_reorder(state,colony_lost_t))))+
geom_col(alpha = 0.7, aes(fill = state) ) +
labs(y = 'N. Colonies', x='') +
theme(legend.position = "none") +
theme(axis.text.x = element_text(angle = 45,vjust = 0.5)) +
scale_y_continuous(labels = scales::label_number(suffix=" M", scale = 1e-6))
