colony |>
filter(year != 2021) |>
group_by(year) |>
summarise(colony_max_n = sum(colony_max,na.rm=TRUE)/100000)
colony |>
filter(year != 2021) |>
group_by(year) |>
summarise(colony_max_n = sum(colony_max,na.rm=TRUE)/100000) |>
ggplot(aes(x=year, y=colony_max_n)) +
geom_line(color="blue") +
geom_point() +
geom_text(aes(x=year, y=colony_max_n,label = colonies_max_n)) +
labs(title = "Max number of bees  colonies by year", subtitle = "2015 - 2020", x = '') + ylim(c(100,170))
colony |>
filter(year != 2021) |>
group_by(year) |>
summarise(colony_max_n = sum(colony_max,na.rm=TRUE)/100000) |>
ggplot(aes(x=year, y=colony_max_n)) +
geom_line(color="blue") +
geom_point() +
geom_text(aes(x=year, y=colony_max_n,label = colonies_max)) +
labs(title = "Max number of bees  colonies by year", subtitle = "2015 - 2020", x = '') + ylim(c(100,170))
colony |>
filter(year != 2021) |>
group_by(year) |>
summarise(colony_max_n = sum(colony_max,na.rm=TRUE)/100000) |>
ggplot(aes(x=year, y=colony_max_n)) +
geom_line(color="blue") +
geom_point() +
labs(title = "Max number of bees  colonies by year", subtitle = "2015 - 2020", x = '') + ylim(c(100,170))
colony |>
filter(year != 2021) |>
group_by(year) |>
summarise(colony_max_n = sum(colony_max,na.rm=TRUE)/100000) |>
ggplot(aes(x=year, y=colony_max_n)) +
geom_line(color="blue") +
geom_point(color = "red") +
labs(title = "Max number of bees  colonies by year", subtitle = "2015 - 2020", x = '') + ylim(c(100,170))
colony |>
filter(year != 2021) |>
group_by(year) |>
summarise(colony_max_n = sum(colony_max,na.rm=TRUE)/100000) |>
ggplot(aes(x=year, y=colony_max_n)) +
geom_line(color="blue") +
geom_point(color = "red", size = colonies_percent) +
labs(title = "Max number of bees  colonies by year", subtitle = "2015 - 2020", x = '') + ylim(c(100,170))
colony |>
filter(year != 2021) |>
group_by(year) |>
summarise(colony_max_n = sum(colony_max,na.rm=TRUE)/100000) |>
ggplot(aes(x=year, y=colony_max_n)) +
geom_line(color="blue") +
geom_point(color = "red", size = colonies_max_n) +
labs(title = "Max number of bees  colonies by year", subtitle = "2015 - 2020", x = '') + ylim(c(100,170))
colony |>
filter(year != 2021) |>
group_by(year) |>
summarise(colony_max_n = sum(colony_max,na.rm=TRUE)/100000) |>
ggplot(aes(x=year, y=colony_max_n)) +
geom_line(color="blue") +
geom_point(color = "red", size = 10) +
labs(title = "Max number of bees  colonies by year", subtitle = "2015 - 2020", x = '') + ylim(c(100,170))
colony |>
filter(year != 2021) |>
group_by(year) |>
summarise(colony_max_n = sum(colony_max,na.rm=TRUE)/100000) |>
ggplot(aes(x=year, y=colony_max_n)) +
geom_line(color="blue") +
geom_point(color = "red", size = colonies_max) +
labs(title = "Max number of bees  colonies by year", subtitle = "2015 - 2020", x = '') + ylim(c(100,170))
colony |>
filter(year != 2021) |>
group_by(year) |>
summarise(colony_max_n = sum(colony_max,na.rm=TRUE)/100000) |>
ggplot(aes(x=year, y=colony_max_n)) +
geom_line(color="blue") +
geom_point(color = "red") +
labs(title = "Max number of bees  colonies by year", subtitle = "2015 - 2020", x = '') + ylim(c(100,170))
colony |>
filter(year == 2020) |>
select(year, colony_max)
colony |>
filter(year != 2021) |>
group_by(year) |>
summarise(colony_max_n = sum(colony_max,na.rm=TRUE)/100000)
summarise(colony_max_n = sum(colony_max,na.rm=TRUE) |>
colony |>
filter(year != 2021) |>
group_by(year) |>
summarise(colony_max_n = sum(colony_max,na.rm=TRUE))
colony |>
colony |>
filter(year != 2021) |>
group_by(year) |>
summarise(colony_max_n = sum(colony_max,na.rm=TRUE))
colony |>
filter(year != 2021) |>
group_by(year) |>
summarise(colony_max_n = sum(colony_max,na.rm=TRUE))|>
ggplot(aes(x=year, y=colony_max_n)) +
geom_line(color="blue") +
geom_point(color = "red") +
labs(title = "Max number of bees  colonies by year", subtitle = "2015 - 2020", x = '', caption = '')
100000
colony |>
filter(year != 2021) |>
group_by(year) |>
summarise(colony_max_n = sum(colony_max,na.rm=TRUE)/100000) |>
ggplot(aes(x=year, y=colony_max_n)) +
geom_line(color="blue") +
geom_point(color = "red") +
labs(title = "Max number of bees  colonies by year", subtitle = "2015 - 2020", x = '', caption = '') + ylim(c(100,170))
colony |>
filter(year != 2021) |>
group_by(year) |>
summarise(colony_max_n = sum(colony_max,na.rm=TRUE)/100000) |>
ggplot(aes(x=year, y=colony_max_n)) +
geom_line(color="blue") +
geom_point(color = "red") +
labs(title = "Max number of bees  colonies by year", subtitle = "2015 - 2020", x = '',y='Bees count', caption = '') + ylim(c(100,170))
colony |>
filter(year != 2021) |>
group_by(months) |>
summarise(colony_max_n = sum(colony_max,na.rm=TRUE)/100000) |>
ggplot(aes(x=year, y=colony_max_n)) +
geom_line(color="blue") +
geom_point(color = "red") +
labs(title = "Max number of bees  colonies by year", subtitle = "2015 - 2020", x = '',y='Bees count', caption = '') + ylim(c(100,170))
colony |>
filter(year != 2021) |>
group_by(months) |>
summarise(colony_max_n = sum(colony_max,na.rm=TRUE)/100000) |>
ggplot(aes(x=months, y=colony_max_n)) +
geom_line(color="blue") +
geom_point(color = "red") +
labs(title = "Max number of bees  colonies by year", subtitle = "2015 - 2020", x = '',y='Bees count', caption = '') + ylim(c(100,170))
year
colony |>
filter(year != 2021) |>
group_by(year) |>
summarise(colony_max_n = sum(colony_max,na.rm=TRUE)/100000) |>
ggplot(aes(x=year, y=colony_max_n)) +
geom_line(color="blue") +
geom_point(color = "red") +
labs(title = "Max number of bees  colonies by year", subtitle = "2015 - 2020", x = '',y='Bees count', caption = '') + ylim(c(100,170))
colony |>
filter(year != 2021) |>
group_by(year) |>
summarise(colony_max_n = sum(colony_max,na.rm=TRUE)/1000000) |>
ggplot(aes(x=year, y=colony_max_n)) +
geom_line(color="blue") +
geom_point(color = "red") +
labs(title = "Max number of bees  colonies by year", subtitle = "2015 - 2020", x = '',y='Bees count', caption = '') + ylim(c(100,170))
colony |>
filter(year != 2021) |>
group_by(year) |>
summarise(colony_max_n = sum(colony_max,na.rm=TRUE)/1000000) |>
ggplot(aes(x=year, y=colony_max_n)) +
geom_line(color="blue") +
geom_point(color = "red") +
labs(title = "Max number of bees  colonies by year", subtitle = "2015 - 2020", x = '',y='Bees count', caption = '') + ylim(c(10,18))
colony |>
filter(year != 2021) |>
group_by(year) |>
summarise(colony_max_n = sum(colony_max,na.rm=TRUE)/1000000) |>
ggplot(aes(x=year, y=colony_max_n)) +
geom_line(color="blue") +
geom_point(color = "red") +
labs(title = "Max number of bees  colonies by year", subtitle = "2015 - 2020", x = '',y='Bees count', caption = 'by millions') + ylim(c(10,18))
colony |>
filter(year != 2021) |>
group_by(year) |>
summarise(colony_max_n = sum(colony_max,na.rm=TRUE)/1000000) |>
ggplot(aes(x=year, y=colony_max_n)) +
geom_line(color="blue") +
geom_point(color = "red") +
labs(title = "Max number of bees  colonies by year", subtitle = "2015 - 2020", x = '',y='Bees count', caption = 'By millions') + ylim(c(10,18))
colony |>
filter(year==2019) |>
ggplot(aes(x= log(colony_lost),y=log(colony_reno)))+
geom_point(aes(na.rm = TRUE)) +
scale_x_log10()+
stat_smooth(geom = 'line',se = TRUE, alpha = 0.7 ) +
labs(title = "Colony recuperation over lost (2019 - 2021)", x = 'Colonies renovated', y = 'Colonies lost', subtitle = 'Number of bees', color = 'Months') +
theme(legend.position = "none")
colony |>
filter(year==2019)
colony |>
filter(year==2019) |>
ggplot(aes(x= log(colony_lost),y=log(colony_reno)))+
geom_point(aes(na.rm = TRUE)) +
scale_x_log10()+
stat_smooth(geom = 'line',se = TRUE, alpha = 0.7 ) +
labs(title = "Colony recuperation over lost (2019 - 2021)", x = 'Colonies renovated', y = 'Colonies lost', subtitle = 'Number of bees', color = 'Months') +
theme(legend.position = "none")
colony |>
filter(year==2015) |>
ggplot(aes(x= log(colony_lost),y=log(colony_reno)))+
geom_point(aes(na.rm = TRUE)) +
scale_x_log10()+
stat_smooth(geom = 'line',se = TRUE, alpha = 0.7 ) +
labs(title = "Colony recuperation over lost (2019 - 2021)", x = 'Colonies renovated', y = 'Colonies lost', subtitle = 'Number of bees', color = 'Months') +
theme(legend.position = "none")
colony |>
filter(year==2015) |>
ggplot(aes(x= (colony_lost),y=(colony_reno)))+
geom_point(aes(na.rm = TRUE)) +
scale_x_log10()+
stat_smooth(geom = 'line',se = TRUE, alpha = 0.7 ) +
labs(title = "Colony recuperation over lost (2019 - 2021)", x = 'Colonies renovated', y = 'Colonies lost', subtitle = 'Number of bees', color = 'Months') +
theme(legend.position = "none")
colony |>
filter(year==2015) |>
ggplot(aes(x= log(colony_lost),y=log(colony_reno)))+
geom_point(aes(na.rm = TRUE)) +
stat_smooth(geom = 'line',se = TRUE, alpha = 0.7 ) +
labs(title = "Colony recuperation over lost (2019 - 2021)", x = 'Colonies renovated', y = 'Colonies lost', subtitle = 'Number of bees', color = 'Months') +
theme(legend.position = "none")
colony |>
filter(year==2019) |>
ggplot(aes(x= log(colony_lost),y=log(colony_reno)))+
geom_point(aes(na.rm = TRUE)) +
stat_smooth(geom = 'line',se = TRUE, alpha = 0.7 ) +
labs(title = "Colony recuperation over lost (2019 - 2021)", x = 'Colonies renovated', y = 'Colonies lost', subtitle = 'Number of bees', color = 'Months') +
theme(legend.position = "none")
colony |>
ggplot(aes(y=colony_max, colour = state, fill = state)) +
geom_bar() +
scale_x_log10()+
labs(title = 'Bees colonies by state', subtitle = 'United States',
y = '', x = '')
colony |>
ggplot(aes(x=colony_max, colour = state, fill = state)) +
geom_bar() +
scale_x_log10()+
labs(title = 'Bees colonies by state', subtitle = 'United States',
y = '', x = '')
colony |>
ggplot(aes(x=colony_max, colour = state, fill = state)) +
geom_density() +
scale_x_log10()+
labs(title = 'Bees colonies by state', subtitle = 'United States',
y = '', x = '')
colony |>
ggplot(aes(x=colony_max)) +
geom_density() +
scale_x_log10()+
labs(title = 'Bees colonies by state', subtitle = 'United States',
y = '', x = '')
colony |>
ggplot(aes(y=colony_max)) +
geom_density() +
scale_x_log10()+
labs(title = 'Bees colonies by state', subtitle = 'United States',
y = '', x = '')
colony |>
ggplot(aes(x=colony_max)) +
geom_density() +
scale_x_log10()+
labs(title = 'Bees colonies by state', subtitle = 'United States',
y = '', x = '')
colony |>
ggplot(aes(x=colony_max)) +
geom_density() +
labs(title = 'Bees colonies by state', subtitle = 'United States',
y = '', x = '')
colony |>
ggplot(aes(x=colony_max)) +
geom_density() +
scale_x_log10()+
labs(title = 'Bees colonies by state', subtitle = 'United States',
y = '', x = '')
colony |>
filter(year==2019) |>
ggplot(aes(x= log(colony_lost),y=log(colony_reno)))+
geom_point(aes(na.rm = TRUE)) +
scale_x_log10()+
stat_smooth(geom = 'line',se = TRUE, alpha = 0.7 ) +
labs(title = "Colony recuperation over lost (2019 - 2021)", x = 'Colonies renovated', y = 'Colonies lost', subtitle = 'Number of bees', color = 'Months') +
theme(legend.position = "none")
colony |>
filter(year in (2019:2020)) |>
colony |>
filter(year % (2019:2020)) |>
colony |>
filter(year %in% (2019:2020)) |>
ggplot(aes(x= log(colony_lost),y=log(colony_reno)))+
geom_point(aes(na.rm = TRUE)) +
scale_x_log10()+
stat_smooth(geom = 'line',se = TRUE, alpha = 0.7 ) +
labs(title = "Colony recuperation over lost (2019 - 2021)", x = 'Colonies renovated', y = 'Colonies lost', subtitle = 'Number of bees', color = 'Months') +
theme(legend.position = "none")
colony |>
filter(year %in% (2019:2020)) |>
ggplot(aes(x= log(colony_lost),y=log(colony_reno)))+
geom_point(na.rm = TRUE) +
scale_x_log10()+
stat_smooth(geom = 'line',se = TRUE, alpha = 0.7 ) +
labs(title = "Colony recuperation over lost (2019 - 2021)", x = 'Colonies renovated', y = 'Colonies lost', subtitle = 'Number of bees', color = 'Months') +
theme(legend.position = "none")
colony |>
filter(year %in% (2019:2020)) |>
ggplot(aes(x= log(colony_lost),y=log(colony_reno)))+
geom_point() +
scale_x_log10()+
stat_smooth(geom = 'line',se = TRUE, alpha = 0.7 ) +
labs(title = "Colony recuperation over lost (2019 - 2021)", x = 'Colonies renovated', y = 'Colonies lost', subtitle = 'Number of bees', color = 'Months') +
theme(legend.position = "none")
colony |>
filter(year %in% (2015:2020)) |>
ggplot(aes(x= log(colony_lost),y=log(colony_reno)))+
geom_point() +
scale_x_log10()+
stat_smooth(geom = 'line',se = TRUE, alpha = 0.7 ) +
labs(title = "Colony recuperation over lost (2019 - 2021)", x = 'Colonies renovated', y = 'Colonies lost', subtitle = 'Number of bees', color = 'Months') +
theme(legend.position = "none")
colony |>
filter(year %in% (2015:2020)) |>
ggplot(aes(x= log(colony_reno),y=log(colony_lost)))+
geom_point() +
scale_x_log10()+
stat_smooth(geom = 'line',se = TRUE, alpha = 0.7 ) +
labs(title = "Colony recuperation over lost (2019 - 2021)", x = 'Colonies renovated', y = 'Colonies lost', subtitle = 'Number of bees', color = 'Months') +
theme(legend.position = "none")
colony |>
filter(year == 2019) |>
ggplot(aes(x= log(colony_reno),y=log(colony_lost)))+
geom_point() +
scale_x_log10()+
stat_smooth(geom = 'line',se = TRUE, alpha = 0.7 ) +
labs(title = "Colony recuperation over lost (2019 - 2021)", x = 'Colonies renovated', y = 'Colonies lost', subtitle = 'Number of bees', color = 'Months') +
theme(legend.position = "none")
colony |>
filter(year == 2019) |>
ggplot(aes(x= log(colony_reno),y=log(colony_lost)))+
geom_point() +
stat_smooth(geom = 'line',se = TRUE, alpha = 0.7 ) +
labs(title = "Colony recuperation over lost (2019 - 2021)", x = 'Colonies renovated', y = 'Colonies lost', subtitle = 'Number of bees', color = 'Months') +
theme(legend.position = "none")
colony |>
filter(year == 2019) |>
ggplot(aes(x= log(colony_reno),y=log(colony_lost)))+
geom_point() +
stat_smooth(geom = 'line',se = TRUE, alpha = 0.7 ) +
labs(title = "Colony recuperation over lost (2019 - 2021)", x = 'Colonies renovated', y = 'Colonies lost', subtitle = 'Number of bees', color = 'Months') +
theme(legend.position = "none")
##Normalize the data so it can represent something else,  maybe plot only by month there are libraries like a tangent something
colony |>
filter(year == 2019) |>
ggplot(aes(x= log(colony_reno),y=log(colony_lost)))+
geom_point() +
stat_smooth(geom = 'line',se = TRUE, alpha = 0.7 ) +
labs(title = "Colony recuperation over lost 2019", x = 'Colonies renovated', y = 'Colonies lost', subtitle = 'Number of bees', color = 'Months') +
theme(legend.position = "none")
codes <- as.list(usamap$code)
library(sf)
library(mapview)
colonies_max
library("rnaturalearth")
library("rnaturalearthdata")
library("ggrepel")
world <- ne_countries(scale = "medium", returnclass = "sf")
states <- st_as_sf(map("state", plot = FALSE, fill = TRUE))
states|>
ggplot() +
geom_sf() +
geom_point(data = colonies_max, aes(x = longitude, y = latitude, size = colony_total/1000),color="#71822b", alpha = 0.6) +
labs(title = "Bees colonies by state", size = "Colony (thousands)")
# Top 10 states with most bees colonies
top_10_colonies <- colonies_max |>
top_n(colony_total, n = 10)
ggplot(data = world) +
geom_sf(data = states) +
geom_point(data = top_10_colonies, aes(x = longitude, y = latitude, size = colony_total/1000),color="#635e0c", alpha = 0.6) +
coord_sf(xlim = c(-130, -60), ylim = c(20, 60), expand = FALSE) +
geom_text_repel(data = top_10_colonies, aes(longitude, latitude,label = state), nudge_x = c(3, 2, 2, 2, -1), nudge_y = c(0.25,-0.25, 0.5, 0.5, -0.5)) +
labs(title = "10 states with most bees colonies", size = "Colony (thousands)")
#Top 10 states with most bees loses %
top_10_colonies_lost <- colonies_percent |>
top_n(lost_pct, n = 10)
top_10_colonies_lost
ggplot() +
geom_sf(data = states) +
geom_point(data = top_10_colonies_lost, aes(x = longitude, y = latitude, size = lost_pct),color="red", alpha = 0.6) +
geom_contour_filled(aes(lon, lat, z = density), kde_df, alpha=.5)+
guides(fill = "none")+
coord_sf(xlim = c(-130, -60), ylim = c(20, 60), expand = FALSE) +
geom_text_repel(data = top_10_colonies_lost, aes(longitude, latitude,label = state)) +
labs(title = "10 cities with the most lost percentage of bees", size = "Percentage", x="", y="", )
temperatures <- readr::read_csv('data/temperatures.csv')
temp_15_20 <- temperatures |>
filter(Country == "US", Year == (2020:2015)) |>
group_by(State) |>
inner_join(usa, join_by(State == state))
summarise(AvgTemperature = round(mean(AvgTemperature, na.rm = TRUE)))|>
temp_15_20 |>
ggplot(aes(longitude, latitude)) +
geom_contour_filled()
temp_15_20 <- temperatures |>
filter(Country == "US", Year == (2020:2015)) |>
group_by(State) |>
inner_join(usa, join_by(State == state))
temp_15_20 |>
ggplot(aes(longitude, latitude)) +
geom_contour_filled()
kdeout <- temp_15_20 %>%
with(
MASS::kde2d(longitude, latitude
)
)
kde_df <- kdeout %>%
.[c("x", "y")] %>%
cross_df() %>%
rename("lon" = "x", "lat" = "y") %>%
mutate(density = as.vector(kdeout$z))
ggplot() +
geom_contour_filled(aes(lon, lat, z = density), kde_df, alpha=.5)
#Top 10 states with most bees loses %
top_10_colonies_lost <- colonies_percent |>
top_n(lost_pct, n = 10)
top_10_colonies_lost
ggplot() +
geom_sf(data = states) +
geom_point(data = top_10_colonies_lost, aes(x = longitude, y = latitude, size = lost_pct),color="red", alpha = 0.6) +
geom_contour_filled(aes(lon, lat, z = density), kde_df, alpha=.5)+
guides(fill = "none")+
coord_sf(xlim = c(-130, -60), ylim = c(20, 60), expand = FALSE) +
geom_text_repel(data = top_10_colonies_lost, aes(longitude, latitude,label = state)) +
labs(title = "10 cities with the most lost percentage of bees", size = "Percentage", x="", y="", )
states|>
ggplot() +
geom_sf() +
geom_point(data = colonies_max, aes(x = longitude, y = latitude, size = colony_total/1000),color="#71822b", alpha = 0.6) +
labs(title = "Bees colonies by state", size = "Colony (thousands)", x='',y='')
ggplot(data = world) +
geom_sf(data = states) +
geom_point(data = top_10_colonies, aes(x = longitude, y = latitude, size = colony_total/1000),color="#635e0c", alpha = 0.6) +
coord_sf(xlim = c(-130, -60), ylim = c(20, 60), expand = FALSE) +
geom_text_repel(data = top_10_colonies, aes(longitude, latitude,label = state), nudge_x = c(3, 2, 2, 2, -1), nudge_y = c(0.25,-0.25, 0.5, 0.5, -0.5)) +
labs(title = "10 states with most bees colonies", size = "Colony (thousands)")
ggplot(data = world) +
geom_sf(data = states) +
geom_point(data = top_10_colonies, aes(x = longitude, y = latitude, size = colony_total/1000),color="#635e0c", alpha = 0.6) +
coord_sf(xlim = c(-130, -60), ylim = c(20, 60), expand = FALSE) +
geom_text_repel(data = top_10_colonies, aes(longitude, latitude,label = state), nudge_x = c(3, 2, 2, 2, -1), nudge_y = c(0.25,-0.25, 0.5, 0.5, -0.5)) +
labs(title = "10 states with most bees colonies", size = "Colony (thousands)",x='',y='')
colony |>
ggplot(aes(x=colony_max)) +
geom_density() +
scale_x_log10()+
labs(title = 'Bees colonies max', subtitle = 'United States',
y = '', x = '')
colony |>
ggplot(aes(x=colony_max)) +
geom_density() +
scale_x_log10()+
labs(title = 'United States', subtitle = 'Bees colonies max',
y = '', x = '')
## Change plot type so it can show useful information, maybe a box plot
renv::status()
renv::snapshot()
renv::status()
#Top 10 states with most bees loses %
top_10_colonies_lost <- colonies_percent |>
top_n(lost_pct, n = 10)
top_10_colonies_lost
ggplot() +
geom_sf(data = states) +
geom_point(data = top_10_colonies_lost, aes(x = longitude, y = latitude, size = lost_pct),color="red", alpha = 0.6) +
geom_contour_filled(aes(lon, lat, z = density), kde_df, alpha=.5)+
guides(fill = "none")+
coord_sf(xlim = c(-130, -60), ylim = c(20, 60), expand = FALSE) +
geom_text_repel(data = top_10_colonies_lost, aes(longitude, latitude,label = state)) +
labs(title = "10 cities with the most lost percentage of bees", size = "Percentage", x="", y="", )
temperatures <- readr::read_csv('data/temperatures.csv')
temp_15_20 <- temperatures |>
filter(Country == "US", Year == (2020:2015)) |>
group_by(State) |>
inner_join(usa, join_by(State == state))
#summarise(AvgTemperature = round(mean(AvgTemperature, na.rm = TRUE)))|>
temp_15_20 |>
ggplot(aes(longitude, latitude)) +
geom_contour_filled()
temperatures <- readr::read_csv('data/temperatures.csv')
temp_15_20 <- temperatures |>
filter(Country == "US", Year == (2020:2015)) |>
group_by(State) |>
inner_join(usa, join_by(State == state))
kdeout <- temp_15_20 %>%
with(
MASS::kde2d(longitude, latitude
)
)
kde_df <- kdeout %>%
.[c("x", "y")] %>%
cross_df() %>%
rename("lon" = "x", "lat" = "y") %>%
mutate(density = as.vector(kdeout$z))
ggplot() +
geom_contour_filled(aes(lon, lat, z = density), kde_df, alpha=.5)
#Top 10 states with most bees loses %
top_10_colonies_lost <- colonies_percent |>
top_n(lost_pct, n = 10)
top_10_colonies_lost
ggplot() +
geom_sf(data = states) +
geom_point(data = top_10_colonies_lost, aes(x = longitude, y = latitude, size = lost_pct),color="red", alpha = 0.6) +
geom_contour_filled(aes(lon, lat, z = density), kde_df, alpha=.5)+
guides(fill = "none")+
coord_sf(xlim = c(-130, -60), ylim = c(20, 60), expand = FALSE) +
geom_text_repel(data = top_10_colonies_lost, aes(longitude, latitude,label = state)) +
labs(title = "10 cities with the most lost percentage of bees", size = "Percentage", x="", y="", )
