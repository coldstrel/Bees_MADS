---
title: "Bees"
author: "Aldo Enrique FERNANDEZ FRAGOSO"
format: html
editor: visual
---

Load Libraries

```{r}
library(ggplot2)
library(ggpubr)
library(tidyverse)
library(forcats)
library("rnaturalearth")
library("rnaturalearthdata")
library("ggrepel")
library(sf)
library(mapview)
```

Loading Bee Data from TidyTuesday

```{r}

## Data from "https://usda.library.cornell.edu/concern/publications/rn301137d?locale=en"

colony <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-11/colony.csv')
colony
```

Number of Bees by year in US

```{r}

colony |>
  filter(year == 2019)
```

## Density by state

```{r}
colony |>
  filter(state == "United States") |>
  ggplot(aes(colony_n)) +
  geom_density() + 
  #scale_x_log10()+
  labs(title = 'United States', subtitle = 'Bees colonies',
       y = '', x = '')

## Change plot type so it can show useful information, maybe a box plot
```

## Lost of bees colonies and colonies added

```{r}

colony |>
  filter(year == 2019) |>
  select(year, colony_max)

colony |>
  filter(year != 2021) |>
  group_by(year) |>
  summarise(colony_max_n = sum(colony_max,na.rm=TRUE)/1000000) |>
  ggplot(aes(x=year, y=colony_max_n)) +
  geom_line(color="blue") +
  geom_point(color = "red") +
  labs(title = "Max number of bees  colonies by year", subtitle = "2015 - 2020", x = '',y='Bees count', caption = 'By millions') + ylim(c(10,18)) 
```

```{r}
#Correlation test

# Shapiro-Wilk normality test for mpg
shapiro.test(colony$colony_lost) # => p =  2.2e-16
# Shapiro-Wilk normality test for wt
shapiro.test(colony$colony_added) # => p = 2.2e-16

cor.test(colony$colony_lost, colony$colony_added,  method = "spearman")

clean_data <- na.omit(colony)
lm(colony_lost ~ colony_added, data=colony) |> summary()
lm(colony_lost ~ colony_added, data=clean_data) |> summary() 
mean(colony$colony_lost, na.rm = TRUE) ## 16551.32
mean(colony$colony_added, na.rm = TRUE) ## 17243.2

t.test(colony$colony_added, colony$colony_lost,  method = "pearson", use = "complete.obs")
```

```{r}
clean_data |> 
  filter(year != 2021) |>
  ggplot(aes(x=colony_lost ,y=colony_added))+
  scale_x_log10() +
  geom_point() +
  geom_smooth(alpha = 0.7, fullrange = TRUE ) +
  labs(title = "Colony renovation over lost by year", x = 'Colonies lost', y = 'Colonies renovated', subtitle = 'Number of bees', color = 'Months') +
  theme(legend.position = "none") +
  facet_wrap(~year)

##Normalize the data so it can represent something else,  maybe plot only by month there are libraries like a tangent something
```

```{r}
#violin plot
colony |>
  filter(year != 2021) |>
  ggplot(aes(x = colony_lost,y = colony_added, fill = year)) +
  geom_violin(trim = FALSE)+
  scale_y_log10() +
  facet_wrap(~year) +
  theme(legend.position = "none")
  
```

```{r}
library(corrplot)
library(RColorBrewer)

numerical_data <- colony %>%
  select(-year)|>
  filter(na.rm=TRUE) |>
  select_if(is.numeric)


M <- cor(numerical_data)

corrplot(M, method = 'circle')
```

Adding Stressors

```{r}
origins_lost <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-11/stressor.csv')
origins_lost
```

Stressor DataSet

```{r}

origins_lost$stressor <- factor(origins_lost$stressor)

sum_stressors <- origins_lost |>
  group_by(stressor) |>
  summarise( pct_stressor = mean(stress_pct, na.rm = TRUE)) |>
  group_by(stressor = ifelse(stressor %in% c("Other", "Unknown"), "Other", as.character(stressor))) %>%
  summarize(pct_stressor = sum(pct_stressor))


sum_stressors %>%
  ggplot(aes(x = fct_rev(fct_reorder(stressor, pct_stressor)), y = pct_stressor)) +
  geom_col(aes(fill = pct_stressor)) +
  labs(title = "Causes of death in bees colonies", y="", x ="" , caption = "Mean of causes of death") +
  theme(legend.position = "none")
  
```

## Biggest colonies by state

```{r}

library(maps)
library(mapdata)
library(usmap)

usa <- read_csv('data/states.csv')
usa
```

```{r}
# Join states with latitudes and longitudes
colonies_max <- colony |>
  select(state,colony_n, colony_lost, colony_added) |>
  group_by(state) |>
  summarise(colony_total = sum(colony_n,na.rm = TRUE),
         colony_lost_t = sum(colony_lost, na.rm = TRUE),
         colony_added_t = sum(colony_added, na.rm = TRUE)) |>
  inner_join(usa, join_by(state == state))


colonies_percent <- colony |>
  select(state, colony_n, colony_lost_pct, colony_reno_pct) |>
  group_by(state) |>
  summarise(
    colony_total = round(mean(colony_n, na.rm = TRUE)),
    lost_pct = round(mean(colony_lost_pct, na.rm = TRUE)),
    added_pct = round(mean(colony_reno_pct, na.rm = TRUE))) |>
    inner_join(usa, join_by(state == state))

colonies_percent

colonies_max
```

```{r}
colonies_max 


world <- ne_countries(scale = "medium", returnclass = "sf")
states <- st_as_sf(map("state", plot = FALSE, fill = TRUE))

states|>
    ggplot() +
    geom_sf() +
    geom_point(data = colonies_max, aes(x = longitude, y = latitude, size = colony_total/1000),color="#71822b", alpha = 0.6) +
  labs(title = "Bees colonies by state", size = "Colony (thousands)", x='',y='')


```

```{r}
# Top 10 states with most bees colonies
top_10_colonies <- colonies_max |>
  arrange(desc(colony_total)) |>
  head(10)

top_10_colonies

ggplot(data = world) +
    geom_sf(data = states) +
    geom_point(data = top_10_colonies, aes(x = longitude, y = latitude, size = colony_total/1000),color="#635e0c", alpha = 0.6) +
  coord_sf(xlim = c(-130, -60), ylim = c(20, 60), expand = FALSE) +
  geom_text_repel(data = top_10_colonies, aes(longitude, latitude,label = state), nudge_x = c(3, 2, 2, 2, -1), nudge_y = c(0.25,-0.25, 0.5, 0.5, -0.5)) +
  labs(title = "10 states with most bees colonies", size = "Colony (thousands)",x='',y='')

```

```{r}
## Top 10 colonies lost

top_10_lost <- colonies_max |>
  arrange(desc(colony_lost_t)) |>
  head(10)

ggplot() +
    geom_sf(data = states) +
    geom_point(data = top_10_lost, aes(x = longitude, y = latitude, size = colony_lost_t/1000),color="#635e0c", alpha = 0.6) +
  coord_sf(xlim = c(-130, -60), ylim = c(20, 60), expand = FALSE) +
  geom_text_repel(data = top_10_colonies, aes(longitude, latitude,label = state), nudge_x = c(3, 2, 2, 2, -1), nudge_y = c(0.25,-0.25, 0.5, 0.5, -0.5)) +
  labs(title = "10 states with most bees colonies", size = "Colony (thousands)",x='',y='')

```

```{r}
temperatures <- readr::read_csv('data/temperatures.csv')

temp_15_20 <- temperatures |>
  filter(Country == "US", Year == (2020:2015)) |>
  group_by(State) |>
  inner_join(usa, join_by(State == state))

temp_clean <- temp_15_20 |>
  select(State, Year, AvgTemperature, Month)|>
  group_by(State, Year, Month) |>
  summarise(AvgTem = mean(AvgTemperature)) |>
  inner_join(usa, join_by(State == state))

temp_2019 <- temp_clean |>
  filter(Year == 2019) |>
  mutate(temp_c = (AvgTem-32) *(5/9) )

top_10_temp_2019 <- temp_2019 |>
  arrange(desc(temp_c))

ggplot(data = world) +
    geom_sf(data = states) +
    geom_point(data = top_10_temp_2019, aes(x = longitude, y = latitude, size = temp_c),color="orange", alpha = 0.9) +
  coord_sf(xlim = c(-130, -60), ylim = c(20, 60), expand = FALSE)


## ADD a map with the states loss most bees and add a relation with the temperatures
 


kdeout <- temp_15_20 %>% 
  with( 
    MASS::kde2d(longitude, latitude
    )
  )

kde_df <- kdeout %>% 
  .[c("x", "y")] %>% 
  cross_df() %>% 
  rename("lon" = "x", "lat" = "y") %>% 
  mutate(density = as.vector(kdeout$z))


ggplot() +
  geom_contour_filled(aes(lon, lat, z = density), kde_df, alpha=.5)

```

```{r}

top_10_colonies_lost <- colonies_percent |>
  arrange(desc(lost_pct)) |>
  head(10)



```

```{r}
#Top 10 states with most bees loses %

top_10_colonies_lost <- colonies_percent |>
  arrange(desc(lost_pct)) |>
  head(10)

top10_cold <- temp_2019 |>
  arrange(desc(temp_c)) |>
  head(10)
  


ggplot() +
    geom_sf(data = states) +
    geom_point(data = top10_cold, aes(x = longitude, y = latitude, size = temp_c),color="red", alpha = 0.9) +
  geom_point(data = top_10_colonies_lost, aes(x = longitude, y = latitude, size = lost_pct),color="black", alpha = 0.3) +
  coord_sf(xlim = c(-130, -60), ylim = c(20, 60), expand = FALSE)



temp_c <- temp_clean |>
  mutate(temp_c = (AvgTem-32) *(5/9))

temp_c |>
  filter(Year != 2021) |>
  group_by(Year) |>
  summarise(temp_act = mean(temp_c,na.rm=TRUE)) |>
  ggplot(aes(x=Year, y=temp_act))+
  geom_line(color="blue") 
  




ggplot() +
    geom_sf(data = states) +
    geom_point(data = top_10_colonies_lost, aes(x = longitude, y = latitude, size = lost_pct),color="red", alpha = 0.6) +

  geom_contour_filled(aes(lon, lat, z = density), kde_df, alpha=.5)+
  guides(fill = "none")+
  
  coord_sf(xlim = c(-130, -60), ylim = c(20, 60), expand = FALSE) +
  geom_text_repel(data = top_10_colonies_lost, aes(longitude, latitude,label = state)) +
  labs(title = "10 cities with the most lost percentage of bees", size = "Percentage", x="", y="", )

```
