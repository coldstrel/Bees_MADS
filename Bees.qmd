---
title: "Bees"
author: "Aldo Enrique FERNANDEZ FRAGOSO"
format: html
editor: visual
---

Load Libraries

```{r}
library(ggplot2)
library(tidyverse)
library(forcats)
```

Loading Bee Data from TidyTuesday

```{r}
colony <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-11/colony.csv')
colony
```

Number of Bees by year in US

```{r}
colony |>
  group_by(months) |>
  summarise(n = colony_lost) |>
  arrange(desc(n))
  
```

## Density by state

```{r}
colony |>
  ggplot(aes(x=colony_max)) +
  geom_density() + 
  scale_x_log10()+
  labs(title = 'United States', subtitle = 'Bees colonies max',
       y = '', x = '')

## Change plot type so it can show useful information, maybe a box plot
```

## Lost of bees colonies and colonies added

```{r}

colony |>
  filter(year == 2020) |>
  select(year, colony_max)

colony |>
  filter(year != 2021) |>
  group_by(year) |>
  summarise(colony_max_n = sum(colony_max,na.rm=TRUE)/1000000) |>
  ggplot(aes(x=year, y=colony_max_n)) +
  geom_line(color="blue") +
  geom_point(color = "red") +
  labs(title = "Max number of bees  colonies by year", subtitle = "2015 - 2020", x = '',y='Bees count', caption = 'By millions') + ylim(c(10,18)) 
```

```{r}
colony |> 
  filter(year == 2019) |>
  ggplot(aes(x= log(colony_reno),y=log(colony_lost)))+
  geom_point() +
  stat_smooth(geom = 'line',se = TRUE, alpha = 0.7 ) +
  labs(title = "Colony recuperation over lost 2019", x = 'Colonies renovated', y = 'Colonies lost', subtitle = 'Number of bees', color = 'Months') +
  theme(legend.position = "none")

##Normalize the data so it can represent something else,  maybe plot only by month there are libraries like a tangent something
```

Adding Stressors

```{r}
origins_lost <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-01-11/stressor.csv')
origins_lost
```

Stressor DataSet

```{r}

origins_lost$stressor <- factor(origins_lost$stressor)

sum_stressors <- origins_lost |>
  group_by(stressor) |>
  summarise( pct_stressor = sum(stress_pct, na.rm = TRUE)/1000)


sum_stressors %>%
  filter(stressor != "Unknown", stressor != "Other") |>
  ggplot(aes(x = fct_rev(fct_reorder(stressor, pct_stressor)), y = pct_stressor)) +
  geom_col(aes(fill = pct_stressor)) +
  labs(title = "Causes of death in bees colonies", subtitle = " % Stressors", y="", x ="" ) +
  theme(legend.position = "none")
  
```

## Biggest colonies by state

```{r}

library(maps)
library(mapdata)
library(usmap)

usa <- read_csv('data/states.csv')
usa
```

```{r}
# Join states with latitudes and longitudes
colonies_max <- colony |>
  select(state,colony_n, colony_lost, colony_added) |>
  group_by(state) |>
  summarise(colony_total = sum(colony_n,na.rm = TRUE),
         colony_lost_t = sum(colony_lost, na.rm = TRUE),
         colony_added_t = sum(colony_added, na.rm = TRUE)) |>
  inner_join(usa, join_by(state == state))


colonies_percent <- colony |>
  select(state, colony_n, colony_lost_pct, colony_reno_pct) |>
  group_by(state) |>
  summarise(
    colony_total = round(mean(colony_n, na.rm = TRUE)),
    lost_pct = round(mean(colony_lost_pct, na.rm = TRUE)),
    added_pct = round(mean(colony_reno_pct, na.rm = TRUE))) |>
    inner_join(usa, join_by(state == state))

colonies_percent

colonies_max
```

```{r}
library(sf)
library(mapview)
colonies_max 
library("rnaturalearth")
library("rnaturalearthdata")
library("ggrepel")

world <- ne_countries(scale = "medium", returnclass = "sf")
states <- st_as_sf(map("state", plot = FALSE, fill = TRUE))

states|>
    ggplot() +
    geom_sf() +
    geom_point(data = colonies_max, aes(x = longitude, y = latitude, size = colony_total/1000),color="#71822b", alpha = 0.6) +
  labs(title = "Bees colonies by state", size = "Colony (thousands)", x='',y='')


```

```{r}
# Top 10 states with most bees colonies
top_10_colonies <- colonies_max |>
  top_n(colony_total, n = 10)

ggplot(data = world) +
    geom_sf(data = states) +
    geom_point(data = top_10_colonies, aes(x = longitude, y = latitude, size = colony_total/1000),color="#635e0c", alpha = 0.6) +
  coord_sf(xlim = c(-130, -60), ylim = c(20, 60), expand = FALSE) +
  geom_text_repel(data = top_10_colonies, aes(longitude, latitude,label = state), nudge_x = c(3, 2, 2, 2, -1), nudge_y = c(0.25,-0.25, 0.5, 0.5, -0.5)) +
  labs(title = "10 states with most bees colonies", size = "Colony (thousands)",x='',y='')

```

```{r}
temperatures <- readr::read_csv('data/temperatures.csv')

temp_15_20 <- temperatures |>
  filter(Country == "US", Year == (2020:2015)) |>
  group_by(State) |>
  inner_join(usa, join_by(State == state))

kdeout <- temp_15_20 %>% 
  with( 
    MASS::kde2d(longitude, latitude
    )
  )

kde_df <- kdeout %>% 
  .[c("x", "y")] %>% 
  cross_df() %>% 
  rename("lon" = "x", "lat" = "y") %>% 
  mutate(density = as.vector(kdeout$z))


ggplot() +
  geom_contour_filled(aes(lon, lat, z = density), kde_df, alpha=.5)

```

```{r}
#Top 10 states with most bees loses %

top_10_colonies_lost <- colonies_percent |>
  top_n(lost_pct, n = 10)

top_10_colonies_lost


ggplot() +
    geom_sf(data = states) +
    geom_point(data = top_10_colonies_lost, aes(x = longitude, y = latitude, size = lost_pct),color="red", alpha = 0.6) +

  geom_contour_filled(aes(lon, lat, z = density), kde_df, alpha=.5)+
  guides(fill = "none")+
  
  coord_sf(xlim = c(-130, -60), ylim = c(20, 60), expand = FALSE) +
  geom_text_repel(data = top_10_colonies_lost, aes(longitude, latitude,label = state)) +
  labs(title = "10 cities with the most lost percentage of bees", size = "Percentage", x="", y="", )

```
